PAK(1)                           User Commands                          PAK(1)



NAME
       pak - Embedthis Pak -- Package Manager

SYNOPSIS
       pak [--catalog catalog] [--all] [--details] [--dir] [--force]
           [--log file:level] [--paks dir] [--quiet] [--silent]
           [--verbose] [--versions]
       [cache|cached|config|depend|edit|help|init|install|list|prune|pub-
       lish|retract|search|uninstall|update|upgrade] paks...

DESCRIPTION
       The pak command is a simple package manager  for  embedding  components
       into applications. It makes it easy to retrieve,
        integrate  and  manage  components  for  applications. Pak focusses on
       embedded applications and components. It is not intended as  a  generic
       package manager to install complete applications.

       Pak calls packages "paks". This is not a misspelling.



WHY PAK?
       Existing  package  managers like Bower are excellent, but the published
       components are typically tuned for enterprise environments and not  for
       embedded  use. Pak focusses on embedded and on publishing packages tai-
       lored for the embedded environment and especially the ESP C web  frame-
       work.



FEATURES
       Pak is implemented primarily as a single script of some 2K lines and is
       very hackable.  It has the following major features:

           . Install, list and uninstall packages into a local application
           . Manages a local cache of retrieved packages
           . Provides a global catalog to search for public paks
           . Easy upgrading paks when new versions become available
           . Automatically retrieves and installs dependant paks
           . Supports the CommonJS package standard
           . Supports the SemVer package versioning standard
           . Supports using GitHub as the primary pak storage repository


NICE PARTS
       While Pak has a strong feature set, there are some characteristics that
       make Pak particularly sweet.

           . Fast, fast, fast
           . Local cache of paks supports fast offline use
           . Can publish, modify and retract paks in the global catalog
           . Web portal to manage your published paks
           . Integrates with the Bower repository to seamlessly download Bower
       components
           . Package.json is compatible with nodejs.




CONFIGURATION
       On startup, Pak reads  configuration  from  a  pakrc  file.  This  file
       defines the operational configuration for Pak. For example:
        {
           "catalogs": [
               "http://localhost:5000/do/pak",
               "https://bower.herokuapp.com/packages",
           ],
           "dirs": {
               "paks": "paks",
               "pakcache": "~/.paks",
           },
        }

       The "catalogs" property defines sites that index and catalog packs. The
       "paks" directory is the name of the local directory in which  to  store
       paks. The "pakcache" directory defines where to cache paks on the local
       system.

       Pak locates a valid pakrc file by searching in order:

           pakrc, .pakrc, ../pakrc, ../.pakrc, /etc/pakrc, package.json



OVERVIEW
       A pak is described by a CommonJS package.json file. This provides at  a
       minimum the following properties.

            {
                "name": "Package name - one word"
                "description": "Package description - one line"
                "version": "1.2.3",
                "keywords": [
                    "comms", "websockets", "sockets", "ssl",
                ],
                "author": {
                    "name": "Your name",
                    "email": "Your email",
                    "url": "Your web site"
                },
                "bugs": {
                    "email": "name@example.com",
                    "url": "http://example.com/bugs"
                },
                "license": "GPL",
                "dependencies": {
                    "name": "version"
                } }

       For more details, see:
           http://package.json.nodejitsu.com
           http://wiki.commonjs.org/wiki/Packages/1.1
           https://npmjs.org/doc/json.html



BASIC USAGE
       To install paks:

           pak install Names...

       To uninstall
           pak uninstall Names...

       To list installed paks
           pak list

       To display pak dependencies
           pak depend

       To show what paks are present in the cache
           pak cached

       To download and cache a pak but not install in the local directory
           pak cache Name

       To prune old versions from the cache
           pak prune


RUNNING
       To run Pak with more verbose trace output, use the --verbose switch. To
       run with less  trace,  use  the  --quiet  switch.   To  run  completely
       silently except for hard-errors, use --silent.


PUBLISHING
       To  publish  a  new  pak, run pak inside the directory of the pak to be
       published:

           pak publish NAME REPOSITORY PASSWORD

       Where NAME is the name of pak, REPOSITORY is the GitHub endpoint of the
       package  and  PASSWORD  is  the password to associate with the pak. You
       will need this password to modify or retract the  pak  in  the  future.
       Safeguard it well.


OPTIONS
       --all URI
              Show all versions of a pak.


       --catalog URI
              Set  the  catalog  URI  to  use  for install, cache, publish and
              retract commands.


       --details URI
              Show more pak details. Useful with pak list.


       --dir directory
              Change to the given directory before running.


       --force
              Force the command to continue. This  is  useful  to  install  or
              cache  a  pak when dependencies cannot be satisfied.  It is also
              useful to cache or install  an  already  cached/installed  pack.
              Aliased as -f.


       --log logName[:logLevel]
              Specify  a file to log internal execution messages. Bit will log
              execution related trace to the log file. The log level specifies
              the  desired  verbosity  of output. Level 0 is the least verbose
              and level 9 is the most. The '-v' switch is an alias for  '--log
              stderr:2'.


       --paks directory
              Specify  the directory to use for the paks cache. This overrides
              the values specified in the various pakrc files.


       --quiet
              Run in quiet mode with less verbose otuput. Aliased as -q.


       --silent
              Run in silent mode suppressing all but hard errors.  Aliased  as
              -s.


       --versions URI
              Show pak version information.



REPORTING BUGS
       Report bugs to dev@embedthis.com.

COPYRIGHT
       Copyright  (C)  2004-2013  Embedthis  Software.  Bit and Ejscript are a
       trademarks of Embedthis Software.

SEE ALSO
       ejs, bit, http://embedthis.com/products/pak/



pak                              December 2013                          PAK(1)
